{"status": "active", "external_homepage": null, "developers": [{"url": "http://sourceforge.net/u/lhopfmueller/", "username": "lhopfmueller", "name": "Lorenz Hopfm\u00fcller"}, {"url": "http://sourceforge.net/u/janvi/", "username": "janvi", "name": "Janvi"}], "screenshots": [{"url": "http://sourceforge.net/p/cad2board/screenshot/screen.GIF", "caption": "", "thumbnail_url": "http://sourceforge.net/p/cad2board/screenshot/screen.GIF/thumb"}], "name": "CAD2Board", "preferred_support_tool": "_members", "preferred_support_url": "", "icon_url": "http://sourceforge.net/p/cad2board/icon", "labels": [""], "video_url": "", "private": false, "creation_date": "2013-08-30", "url": "http://sourceforge.net/p/cad2board/", "socialnetworks": [{"accounturl": "", "socialnetwork": "Twitter"}], "short_description": "Still struggling with Excel to setup your pick and place machine ? Cad2Board reads component mounting information from Eagle, Altium Designer and Mentor Expedition PCB designs.\r\n\r\nComponent or component groups can be assigned to feeder slots by drag and drop. Any modifications for PCB population can be defined to generate PCB variants, consider rotations from unusual tape and reel packaging or to account in advance for CAD library or PCB design bugs. Generated setup data is stored in a seperate project file. Succeeding PCB revisions what contain redesign changes can be merged with existing project setup data. Inconsistencies are highlighted to solve them by new assignements and unused feeders can be cleaned up with a single push. Finally a machine program is generated in Heeb HE50 format and downloaded to the machine interface.\r\n", "moved_to_url": "", "shortname": "cad2board", "_id": "5220f5210594ca0ca232ab7a", "tools": [{"sourceforge_group_id": 1942937, "mount_point": "summary", "name": "summary", "label": "Summary"}, {"mount_point": "files", "name": "files", "label": "Files"}, {"mount_point": "reviews", "name": "reviews", "label": "Reviews"}, {"mount_point": "support", "name": "support", "label": "Support"}], "summary": "is a Qt program to generate SMD chip shooter code", "categories": {"developmentstatus": [{"fullpath": "Development Status :: 4 - Beta", "shortname": "beta", "fullname": "4 - Beta", "id": 10}], "topic": [{"fullpath": "Topic :: Scientific/Engineering :: Electronic Design Automation (EDA)", "shortname": "eda", "fullname": "Electronic Design Automation (EDA)", "id": 246}, {"fullpath": "Topic :: Formats and Protocols :: Data Formats :: Comma-separated values (CSV)", "shortname": "CSV", "fullname": "Comma-separated values (CSV)", "id": 769}], "language": [{"fullpath": "Programming Language :: C++", "shortname": "cpp", "fullname": "C++", "id": 165}], "license": [{"fullpath": "License :: OSI-Approved Open Source :: GNU General Public License version 3.0 (GPLv3)", "shortname": "gplv3", "fullname": "GNU General Public License version 3.0 (GPLv3)", "id": 679}], "database": [], "environment": [{"fullpath": "User Interface :: Toolkits/Libraries :: Qt", "shortname": "ui_qt", "fullname": "Qt", "id": 479}], "audience": [{"fullpath": "Intended Audience :: by Industry or Sector :: Science/Research", "shortname": "scienceresearch", "fullname": "Science/Research", "id": 367}, {"fullpath": "Intended Audience :: by Industry or Sector :: Engineering", "shortname": "audienceengineering", "fullname": "Engineering", "id": 729}], "translation": [{"fullpath": "Translations :: German", "shortname": "german", "fullname": "German", "id": 279}], "os": [{"fullpath": "Operating System :: Grouping and Descriptive Categories :: OS Portable (Source code to work with many OS platforms)", "shortname": "os_portable", "fullname": "OS Portable (Source code to work with many OS platforms)", "id": 436}, {"fullpath": "Operating System :: Modern (Vendor-Supported) Desktop Operating Systems :: Windows 7", "shortname": "win7", "fullname": "Windows 7", "id": 851}]}}
