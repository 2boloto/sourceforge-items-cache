{"status": "active", "external_homepage": "http://configml.sourceforge.net", "developers": [{"url": "http://sourceforge.net/u/y575/", "username": "y575", "name": "Alexander Eliseev"}], "screenshots": [], "name": "Configuration markup language", "preferred_support_tool": "", "preferred_support_url": "", "icon_url": null, "labels": [], "video_url": "", "private": false, "creation_date": "2010-04-04", "url": "http://sourceforge.net/p/configml/", "socialnetworks": [], "short_description": "For object-oriented programs is useful to supply the configuration information in structured manner also. Seems the XML is the an answer. But too much <tag></tag> everywhere make the XML for *.config or *.ini files almost human unreadable and uneditable.\r\n\r\nThis library intended to read text of markup configurations files in uniform way. Text information from the file is loaded by your program as a structural tree. After slurping a *.config file we can supply the resulting objects to object instances of our program to let them configure themselves. So, it facilitates text information to supply configuration data to object-oriented software.\r\n\r\nAdvantage - we can use markups to mark just the groups of the parameters only. And we do obliged not to keep markups for the every Name=Value pairs like XML does.\r\n\r\nSuch text in *.config file is less messy, and much more human readable then XML.", "moved_to_url": "", "shortname": "configml", "_id": "517aaa1934309d2f53563480", "tools": [{"sourceforge_group_id": 314530, "mount_point": "summary", "name": "summary", "label": "Summary"}, {"mount_point": "support", "name": "support", "label": "Support"}, {"mount_point": "reviews", "name": "reviews", "label": "Reviews"}, {"mount_point": "files", "name": "files", "label": "Files"}, {"mount_point": "wiki", "name": "wiki", "label": "Wiki"}, {"mount_point": "code", "name": "svn", "label": "Code"}, {"mount_point": "activity", "name": "activity", "label": "Activity"}], "summary": "Human readable and human writable format for the config files", "categories": {"developmentstatus": [{"fullpath": "Development Status :: 2 - Pre-Alpha", "shortname": "prealpha", "fullname": "2 - Pre-Alpha", "id": 8}], "topic": [{"fullpath": "Topic :: Formats and Protocols :: Data Formats", "shortname": "data_formats", "fullname": "Data Formats", "id": 554}], "language": [{"fullpath": "Programming Language :: C++", "shortname": "cpp", "fullname": "C++", "id": 165}], "license": [{"fullpath": "License :: OSI-Approved Open Source :: GNU Library or Lesser General Public License version 2.0 (LGPLv2)", "shortname": "lgpl", "fullname": "GNU Library or Lesser General Public License version 2.0 (LGPLv2)", "id": 16}], "database": [], "environment": [], "audience": [{"fullpath": "Intended Audience :: by End-User Class :: Developers", "shortname": "developers", "fullname": "Developers", "id": 3}, {"fullpath": "Intended Audience :: by End-User Class :: Architects", "shortname": "architects", "fullname": "Architects", "id": 863}], "translation": [], "os": [{"fullpath": "Operating System :: Grouping and Descriptive Categories :: OS Portable (Source code to work with many OS platforms)", "shortname": "os_portable", "fullname": "OS Portable (Source code to work with many OS platforms)", "id": 436}]}}
