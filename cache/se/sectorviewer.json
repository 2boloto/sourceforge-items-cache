{"_id": "535d54fd04161f3b86318217", "categories": {"audience": [{"fullname": "Advanced End Users", "fullpath": "Intended Audience :: by End-User Class :: Advanced End Users", "id": 536, "shortname": "enduser_advanced"}], "database": [], "developmentstatus": [{"fullname": "3 - Alpha", "fullpath": "Development Status :: 3 - Alpha", "id": 9, "shortname": "alpha"}], "environment": [{"fullname": ".NET/Mono", "fullpath": "User Interface :: Graphical :: .NET/Mono", "id": 469, "shortname": "ui_dotnet"}, {"fullname": "Win32 (MS Windows)", "fullpath": "User Interface :: Graphical :: Win32 (MS Windows)", "id": 230, "shortname": "win32"}], "language": [{"fullname": "C#", "fullpath": "Programming Language :: C#", "id": 271, "shortname": "csharp"}], "license": [], "os": [{"fullname": "WinXP", "fullpath": "Operating System :: Modern (Vendor-Supported) Desktop Operating Systems :: WinXP", "id": 419, "shortname": "mswin_xp"}], "topic": [], "translation": []}, "creation_date": "2014-04-27", "developers": [{"name": "krebalo", "url": "http://sourceforge.net/u/krebalo/", "username": "krebalo"}], "external_homepage": null, "icon_url": null, "labels": ["hex view", "physicaldrive0", "sectors", "mbr parsing", "data recovery"], "moved_to_url": "", "name": "SectorViewer", "preferred_support_tool": "wiki", "preferred_support_url": "", "private": false, "screenshots": [{"caption": "Previewing recoverable image", "thumbnail_url": "http://sourceforge.net/p/sectorviewer/screenshot/SVimageseeker.png/thumb", "url": "http://sourceforge.net/p/sectorviewer/screenshot/SVimageseeker.png"}, {"caption": "Sector 0 selected on PhysicalDrive0", "thumbnail_url": "http://sourceforge.net/p/sectorviewer/screenshot/SectorViewer%20-%20tutorial.png/thumb", "url": "http://sourceforge.net/p/sectorviewer/screenshot/SectorViewer%20-%20tutorial.png"}], "short_description": "Do not expect any usability here!\r\n\r\nThis is my very old research project. From time to time I have found it handy for recovering images from HDDs or memory cards.\r\n\r\nSector Viewer reads low level data of any physical drive like HDD or a memory card. This means it don't care about FAT, NTFS or any other file system. \r\n\r\nFor recovering data you just search the file signature of a missing file. For example FF D8 FF for JPGs. Then after long scanning the application returns the address list and recovering process  of missing images can start!\r\n\r\nDespite the application is a hack of hacks in some cases it handles physical drives far better than any other free data recovery software I have found so far.\r\n\r\nSo I decided to share the source and do some refactoring.\r\n\r\nSector Viewer is a very robust C# .NET application that can access \\.\\\\PhysicalDrive on Windows XP.\r\n\r\nWarning! Accessing directly to physical drive may not be safe! But it feels awesome!\r\n\r\nRead Wiki for help.", "shortname": "sectorviewer", "socialnetworks": [{"accounturl": "", "socialnetwork": "Twitter"}, {"accounturl": null, "socialnetwork": "Facebook"}], "status": "active", "summary": "Robust .NET application that is able to recover images as raw data.", "tools": [{"label": "Activity", "mount_point": "activity", "name": "activity"}, {"label": "Files", "mount_point": "files", "name": "files"}, {"label": "Summary", "mount_point": "summary", "name": "summary", "sourceforge_group_id": 2207351}, {"label": "Reviews", "mount_point": "reviews", "name": "reviews"}, {"label": "Support", "mount_point": "support", "name": "support"}, {"label": "Wiki", "mount_point": "wiki", "name": "wiki"}, {"label": "Code", "mount_point": "code", "name": "git"}, {"label": "Tickets", "mount_point": "tickets", "name": "tickets"}, {"label": "Discussion", "mount_point": "discussion", "name": "discussion"}], "url": "http://sourceforge.net/p/sectorviewer/", "video_url": null}
