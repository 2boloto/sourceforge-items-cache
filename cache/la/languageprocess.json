{"_id": "517ae45434309d5ba87ce805", "categories": {"audience": [{"fullname": "Developers", "fullpath": "Intended Audience :: by End-User Class :: Developers", "id": 3, "shortname": "developers"}], "database": [], "developmentstatus": [{"fullname": "4 - Beta", "fullpath": "Development Status :: 4 - Beta", "id": 10, "shortname": "beta"}], "environment": [], "language": [{"fullname": "Java", "fullpath": "Programming Language :: Java", "id": 198, "shortname": "java"}], "license": [{"fullname": "Public Domain", "fullpath": "License :: Public Domain", "id": 197, "shortname": "publicdomain"}], "os": [], "topic": [{"fullname": "Interpreters", "fullpath": "Topic :: Software Development :: Interpreters", "id": 49, "shortname": "interpreters"}], "translation": []}, "creation_date": "2010-02-17", "developers": [{"name": "Ozgur Tumer", "url": "http://sourceforge.net/u/ozgurtumer/", "username": "ozgurtumer"}], "external_homepage": "http://languageprocess.sourceforge.net", "icon_url": null, "labels": [], "moved_to_url": "", "name": "Language Processor", "preferred_support_tool": "", "preferred_support_url": "", "private": false, "screenshots": [], "short_description": "I did what any real geek would do; I have written a compiler compiler. It is called Language Processor. A software that you can feed in a language definition with its semantic and you get an object that can run your program in your defined language. ", "shortname": "languageprocess", "socialnetworks": [], "status": "active", "summary": "", "tools": [{"label": "Activity", "mount_point": "activity", "name": "activity"}, {"label": "Files", "mount_point": "files", "name": "files"}, {"label": "Summary", "mount_point": "summary", "name": "summary", "sourceforge_group_id": 305626}, {"label": "Support", "mount_point": "support", "name": "support"}, {"label": "Reviews", "mount_point": "reviews", "name": "reviews"}, {"label": "Wiki", "mount_point": "wiki", "name": "wiki"}, {"label": "Code", "mount_point": "code", "name": "svn"}], "url": "http://sourceforge.net/p/languageprocess/", "video_url": ""}
