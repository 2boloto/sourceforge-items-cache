{"_id": "535d2a62c4d1041cb7864b4a", "categories": {"audience": [{"fullname": "Science/Research", "fullpath": "Intended Audience :: by Industry or Sector :: Science/Research", "id": 367, "shortname": "scienceresearch"}, {"fullname": "Developers", "fullpath": "Intended Audience :: by End-User Class :: Developers", "id": 3, "shortname": "developers"}], "database": [], "developmentstatus": [{"fullname": "5 - Production/Stable", "fullpath": "Development Status :: 5 - Production/Stable", "id": 11, "shortname": "production"}], "environment": [], "language": [{"fullname": "Java", "fullpath": "Programming Language :: Java", "id": 198, "shortname": "java"}], "license": [{"fullname": "Apache License V2.0", "fullpath": "License :: OSI-Approved Open Source :: Apache License V2.0", "id": 401, "shortname": "apache2"}], "os": [], "topic": [{"fullname": "Algorithms", "fullpath": "Topic :: Software Development :: Algorithms", "id": 620, "shortname": "algorithms"}, {"fullname": "Mathematics", "fullpath": "Topic :: Scientific/Engineering :: Mathematics", "id": 98, "shortname": "mathematics"}, {"fullname": "Libraries", "fullpath": "Topic :: Software Development :: Libraries", "id": 770, "shortname": "softdevlibraries"}], "translation": []}, "creation_date": "2014-04-27", "developers": [{"name": "jeffhain", "url": "http://sourceforge.net/u/omaamo/", "username": "omaamo"}], "external_homepage": null, "icon_url": null, "labels": [], "moved_to_url": "", "name": "Jafaran", "preferred_support_tool": "", "preferred_support_url": "", "private": false, "screenshots": [], "short_description": "Jafaran (Java Fast Random) provides fast, and for some more random, implementations of java.util.Random, with additional nextXXX() methods, and methods to retrieve and restore state.\r\n\r\nThe names of implementations contain \"Conc\" (for concurrent) if they are thread-safe and non-blocking, or \"Seq\" (for sequential) if they are not thread-safe.\r\n\r\nAlso provides an implementation of Ziggurat algorithm (based on J. A. Doornik paper, 2005), used by nextGaussian() methods of the provided implementations.\r\n\r\nRequires Java 5 or later.\r\n\r\n\r\nPrincipal classes:\r\n\r\n- Implementations using Mersenne-Twister algorithm (good pseudo-randomness):\r\nMTConcRNG\r\nMTSeqRNG\r\n\r\n- Implementations using Marsaglia Xor-Shift (fast):\r\nMXSIntSeqRNG (32 bits)\r\nMXSLongSeqRNG (64 bits) (nextLong() faster, larger period)\r\n\r\n- RandomConcRNG: Pseudo-RNG using the same algorithm than Random.\r\n- RandomRNGAdapter: Pseudo-RNG backed by a Random instance.\r\n\r\n- Ziggurat: Random-based implementation of Ziggurat algorithm.\r\n", "shortname": "jafaran", "socialnetworks": [{"accounturl": "", "socialnetwork": "Twitter"}, {"accounturl": null, "socialnetwork": "Facebook"}], "status": "active", "summary": "Fast and more random implementations of java.util.Random.", "tools": [{"label": "Activity", "mount_point": "activity", "name": "activity"}, {"label": "Files", "mount_point": "files", "name": "files"}, {"label": "Summary", "mount_point": "summary", "name": "summary", "sourceforge_group_id": 2207232}, {"label": "Reviews", "mount_point": "reviews", "name": "reviews"}, {"label": "Support", "mount_point": "support", "name": "support"}, {"label": "Wiki", "mount_point": "wiki", "name": "wiki"}, {"label": "Code", "mount_point": "code", "name": "git"}, {"label": "Tickets", "mount_point": "tickets", "name": "tickets"}, {"label": "Discussion", "mount_point": "discussion", "name": "discussion"}], "url": "http://sourceforge.net/p/jafaran/", "video_url": null}
