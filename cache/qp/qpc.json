{"_id": "5022bd1d71b75b7a32b96a53", "categories": {"audience": [{"fullname": "Aerospace", "fullpath": "Intended Audience :: by Industry or Sector :: Aerospace", "id": 599, "shortname": "aerospace"}, {"fullname": "Healthcare Industry", "fullpath": "Intended Audience :: by Industry or Sector :: Healthcare Industry", "id": 362, "shortname": "healthcareindustry"}, {"fullname": "Telecommunications Industry", "fullpath": "Intended Audience :: by Industry or Sector :: Telecommunications Industry", "id": 368, "shortname": "telecommunications"}, {"fullname": "Developers", "fullpath": "Intended Audience :: by End-User Class :: Developers", "id": 3, "shortname": "developers"}, {"fullname": "Engineering", "fullpath": "Intended Audience :: by Industry or Sector :: Engineering", "id": 729, "shortname": "audienceengineering"}, {"fullname": "Automotive", "fullpath": "Intended Audience :: by Industry or Sector :: Automotive", "id": 768, "shortname": "automotive"}], "database": [], "developmentstatus": [{"fullname": "6 - Mature", "fullpath": "Development Status :: 6 - Mature", "id": 12, "shortname": "mature"}], "environment": [], "language": [{"fullname": "C++", "fullpath": "Programming Language :: C++", "id": 165, "shortname": "cpp"}, {"fullname": "C", "fullpath": "Programming Language :: C", "id": 164, "shortname": "c"}], "license": [{"fullname": "Other License", "fullpath": "License :: Other License", "id": 196, "shortname": "other"}, {"fullname": "GNU General Public License version 3.0 (GPLv3)", "fullpath": "License :: OSI-Approved Open Source :: GNU General Public License version 3.0 (GPLv3)", "id": 679, "shortname": "gplv3"}], "os": [{"fullname": "Project is an Operating System Kernel", "fullpath": "Operating System :: Grouping and Descriptive Categories :: Project is an Operating System Kernel", "id": 437, "shortname": "os_projectkernel"}], "topic": [{"fullname": "Frameworks", "fullpath": "Topic :: Software Development :: Frameworks", "id": 606, "shortname": "frameworks"}, {"fullname": "UML", "fullpath": "Topic :: Software Development :: Design :: UML", "id": 643, "shortname": "uml"}, {"fullname": "Embedded systems", "fullpath": "Topic :: System :: Embedded systems", "id": 749, "shortname": "embedded"}], "translation": []}, "creation_date": "2007-02-23", "developers": [{"name": "Quantum Leaps", "url": "http://sourceforge.net/u/quantum-leaps/", "username": "quantum-leaps"}], "external_homepage": "http://www.state-machine.com", "icon_url": "http://sourceforge.net/p/qpc/icon", "labels": ["Embedded systems", "Finite state machines", "Graphical modeling tools"], "moved_to_url": "", "name": "QP actor frameworks and QM modeling tool", "preferred_support_tool": "discussion", "preferred_support_url": "", "private": false, "screenshots": [{"caption": "QP frameworks and QM modeling tool", "thumbnail_url": "http://sourceforge.net/p/qpc/screenshot/qp_qm_logos.jpg/thumb", "url": "http://sourceforge.net/p/qpc/screenshot/qp_qm_logos.jpg"}, {"caption": "QM graphical modeling tool", "thumbnail_url": "http://sourceforge.net/p/qpc/screenshot/qm_screenshot.png/thumb", "url": "http://sourceforge.net/p/qpc/screenshot/qm_screenshot.png"}, {"caption": "Practical UML Statecharts in C/C++ book about QP", "thumbnail_url": "http://sourceforge.net/p/qpc/screenshot/qp_books.jpg/thumb", "url": "http://sourceforge.net/p/qpc/screenshot/qp_books.jpg"}], "short_description": "QP is a family of lightweight software frameworks for building responsive and modular real-time embedded applications as systems of cooperating, event-driven active objects (actors). The QP family consists of QP/C, QP/C++, and QP-nano frameworks, which are all strictly quality controlled, superbly documented, and commercially licensable.\r\n \r\nThe behavior of active objects is specified in QP by means of hierarchical state machines (UML statecharts). The frameworks support manual coding of UML state machines in C or C++ as well as automatic code generation by means of the free QM modeling tool.\r\n\r\nAll QP frameworks can run on bare-metal MCUs, completely replacing a traditional RTOS. Ports and ready-to-use examples are provided for all major CPUs, such as ARM Cortex-M, ARM7/9, MSP430, C28x, C55x, RX, R8C, AVR32, AVRMega, PIC24/dsPIC, as well as Arduino and mbed. QP/C and QP/C++ can also work with a traditional OS/RTOS, such as: POSIX (Linux, QNX), Windows, VxWorks, ThreadX, and uC/OS.", "shortname": "qpc", "socialnetworks": [{"accounturl": "mirosamek", "socialnetwork": "Twitter"}, {"accounturl": null, "socialnetwork": "Facebook"}], "status": "active", "summary": "Event-driven, RTOS-like, active object frameworks for microcontrollers", "tools": [{"label": "Summary", "mount_point": "summary", "name": "summary", "sourceforge_group_id": 190182}, {"label": "Files", "mount_point": "downloads", "name": "files"}, {"label": "Bugs", "mount_point": "bugs", "name": "tickets"}, {"label": "Features", "mount_point": "feature-requests", "name": "tickets"}, {"label": "News", "mount_point": "news", "name": "blog"}, {"label": "Forum", "mount_point": "discussion", "name": "discussion"}, {"label": "GIT:QP/C++", "mount_point": "qpcpp", "name": "git"}, {"label": "GIT:QP-nano", "mount_point": "qpn", "name": "git"}, {"label": "GIT:Qtools", "mount_point": "qtools", "name": "git"}, {"label": "Git:QP/C", "mount_point": "qpc", "name": "git"}, {"label": "Reviews", "mount_point": "reviews", "name": "reviews"}, {"label": "Support", "mount_point": "support", "name": "support"}, {"label": "Activity", "mount_point": "activity", "name": "activity"}, {"label": "Blog", "mount_point": "blog", "name": "blog"}, {"label": "Mailing Lists", "mount_point": "mailman", "name": "mailman"}], "url": "http://sourceforge.net/p/qpc/", "video_url": ""}
