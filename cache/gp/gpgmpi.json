{"status": "active", "external_homepage": null, "developers": [{"url": "http://sourceforge.net/u/guoganghn/", "username": "guoganghn", "name": "Guo Gang"}], "screenshots": [], "name": "gpgmpi", "preferred_support_tool": "discussion", "preferred_support_url": "", "icon_url": null, "labels": [], "video_url": "", "private": false, "creation_date": "2013-11-26", "url": "http://sourceforge.net/p/gpgmpi/", "socialnetworks": [{"accounturl": "", "socialnetwork": "Twitter"}, {"accounturl": null, "socialnetwork": "Facebook"}], "short_description": "The need for speed is always a challenge for large-scale stochastic simulation. This software is based on a parallel stochastic simulation algorithm already implemented on Graphics Processing Unit (GPU) for inhomogeneous reaction-drift-diffusion systems. We suggest an improved choice of time step which turns out to be almost 3 or even more times fast with nearly identical accuracy. The software is now completely implemented in C++ and OpenCL which only depends on boost library and GPU vendor\u2019s OpenCL SDK. It can be easily set up with Microsoft Visual Studio on Windows platform. The programming interface to define and solve a problem is rather simple and we encourage applications in specific domains as much as possible", "moved_to_url": "", "shortname": "gpgmpi", "_id": "52946506d46bb415a8c5e481", "tools": [{"mount_point": "files", "name": "files", "label": "Files"}, {"sourceforge_group_id": 2020383, "mount_point": "summary", "name": "summary", "label": "Summary"}, {"mount_point": "reviews", "name": "reviews", "label": "Reviews"}, {"mount_point": "support", "name": "support", "label": "Support"}, {"mount_point": "wiki", "name": "wiki", "label": "Wiki"}, {"mount_point": "code", "name": "git", "label": "Code"}, {"mount_point": "tickets", "name": "tickets", "label": "Tickets"}, {"mount_point": "discussion", "name": "discussion", "label": "Discussion"}, {"mount_point": "activity", "name": "activity", "label": "Activity"}], "summary": "An GPGMP in C++/OpenCL with improved time step algorithm", "categories": {"developmentstatus": [], "topic": [], "language": [], "license": [], "database": [], "environment": [], "audience": [], "translation": [], "os": []}}
