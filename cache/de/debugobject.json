{"_id": "506a40981be1ce54403462d5", "categories": {"audience": [{"fullname": "Developers", "fullpath": "Intended Audience :: by End-User Class :: Developers", "id": 3, "shortname": "developers"}, {"fullname": "Quality Engineers", "fullpath": "Intended Audience :: by End-User Class :: Quality Engineers", "id": 537, "shortname": "enduser_qa"}, {"fullname": "Architects", "fullpath": "Intended Audience :: by End-User Class :: Architects", "id": 863, "shortname": "architects"}, {"fullname": "Testers", "fullpath": "Intended Audience :: by End-User Class :: Testers", "id": 865, "shortname": "testers"}], "database": [], "developmentstatus": [{"fullname": "5 - Production/Stable", "fullpath": "Development Status :: 5 - Production/Stable", "id": 11, "shortname": "production"}], "environment": [], "language": [{"fullname": "PHP", "fullpath": "Programming Language :: PHP", "id": 183, "shortname": "php"}], "license": [{"fullname": "Creative Commons Attribution License", "fullpath": "License :: Creative Commons Attribution License", "id": 868, "shortname": "ccal"}], "os": [], "topic": [{"fullname": "Debuggers", "fullpath": "Topic :: Software Development :: Debuggers", "id": 47, "shortname": "debuggers"}], "translation": []}, "creation_date": "2012-10-02", "developers": [{"name": "John Schlick", "url": "http://sourceforge.net/u/userid-1005263/", "username": "john_schlick"}], "external_homepage": "https://sourceforge.net/projects/debugobject/?source=directory", "icon_url": null, "labels": [], "moved_to_url": "", "name": "Debug Object", "preferred_support_tool": "wiki", "preferred_support_url": "", "private": false, "screenshots": [], "short_description": "Debugging code has always been a tricky prospect.  Most people use one of two methods: Either include \"log\" statements to see whats going on while running a routine, and then either delete them, or comment them out when they are done,\r\n(For legacy code, the commenting it out mechanism is often used so that the code is left to uncomment the next time that piece of code is worked on) or you can rely on a \"debugger\" to trace whats going on, and then look thru the more copious output.\r\nPHP does not really HAVE a good debugger, so most PHP developers are left to write output statements.\r\nRemembering WHERE those debug statements are so your log files don't fill up can also be a pain.\r\n\r\nThe DebugObject class is a \"take\" on instrumenting your code but it's output can be easily turned on and off for any section of your code.  This way you write the debug code you want, and leave it in your codebase, but the object knows when to execute that code, so it generates ONLY the output that you want.", "shortname": "debugobject", "socialnetworks": [], "status": "active", "summary": "a PHP object designed to aid in debugging your codebase.", "tools": [{"label": "Wiki", "mount_point": "wiki", "name": "wiki"}, {"label": "Files", "mount_point": "downloads", "name": "files"}, {"label": "Tickets", "mount_point": "tickets", "name": "tickets"}, {"label": "Discussion", "mount_point": "discussion", "name": "discussion"}, {"label": "Code", "mount_point": "code", "name": "svn"}, {"label": "Summary", "mount_point": "summary", "name": "summary", "sourceforge_group_id": 990794}, {"label": "Reviews", "mount_point": "reviews", "name": "reviews"}, {"label": "Support", "mount_point": "support", "name": "support"}], "url": "http://sourceforge.net/p/debugobject/", "video_url": ""}
