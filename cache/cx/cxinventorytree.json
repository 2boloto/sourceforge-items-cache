{"status": "active", "external_homepage": null, "developers": [{"url": "http://sourceforge.net/u/cortexorion/", "username": "cortexorion", "name": "Vincent Fiestada"}], "screenshots": [], "name": "CX Inventory Tree", "preferred_support_tool": "", "preferred_support_url": "", "icon_url": null, "labels": [], "video_url": "", "private": false, "creation_date": "2013-09-20", "url": "http://sourceforge.net/p/cxinventorytree/", "socialnetworks": [{"accounturl": "", "socialnetwork": "Twitter"}], "short_description": "I created this as Machine Exercise # 17 for my CS11 class. It is a simple C implementation of a tree. Using pointers, one can add nodes to the binary tree, which it will add based on lexicographical string comparisons (i.e., left node for words that come before, right for those that come after). One can also search the tree and display all nodes. All these functions are done recursively.", "moved_to_url": "", "shortname": "cxinventorytree", "_id": "523c1b390594ca062c83454a", "tools": [{"mount_point": "reviews", "name": "reviews", "label": "Reviews"}, {"mount_point": "support", "name": "support", "label": "Support"}, {"sourceforge_group_id": 1957872, "mount_point": "summary", "name": "summary", "label": "Summary"}, {"mount_point": "files", "name": "files", "label": "Files"}, {"mount_point": "code", "name": "git", "label": "Code"}, {"mount_point": "tickets", "name": "tickets", "label": "Tickets"}], "summary": "A simple C implementation of a tree structure using pointers", "categories": {"developmentstatus": [], "topic": [], "language": [], "license": [], "database": [], "environment": [], "audience": [], "translation": [], "os": []}}
