{"_id": "5176cc13271846345e716bd4", "categories": {"audience": [{"fullname": "Science/Research", "fullpath": "Intended Audience :: by Industry or Sector :: Science/Research", "id": 367, "shortname": "scienceresearch"}], "database": [], "developmentstatus": [{"fullname": "4 - Beta", "fullpath": "Development Status :: 4 - Beta", "id": 10, "shortname": "beta"}], "environment": [], "language": [{"fullname": "C", "fullpath": "Programming Language :: C", "id": 164, "shortname": "c"}], "license": [{"fullname": "GNU General Public License version 2.0 (GPLv2)", "fullpath": "License :: OSI-Approved Open Source :: GNU General Public License version 2.0 (GPLv2)", "id": 15, "shortname": "gpl"}], "os": [{"fullname": "OS Portable (Source code to work with many OS platforms)", "fullpath": "Operating System :: Grouping and Descriptive Categories :: OS Portable (Source code to work with many OS platforms)", "id": 436, "shortname": "os_portable"}, {"fullname": "All POSIX (Linux/BSD/UNIX-like OSes)", "fullpath": "Operating System :: Grouping and Descriptive Categories :: All POSIX (Linux/BSD/UNIX-like OSes)", "id": 200, "shortname": "posix"}, {"fullname": "All 32-bit MS Windows (95/98/NT/2000/XP)", "fullpath": "Operating System :: Grouping and Descriptive Categories :: All 32-bit MS Windows (95/98/NT/2000/XP)", "id": 435, "shortname": "mswin_all32bit"}], "topic": [{"fullname": "Mathematics", "fullpath": "Topic :: Scientific/Engineering :: Mathematics", "id": 98, "shortname": "mathematics"}], "translation": []}, "creation_date": "2010-03-24", "developers": [{"name": "Jacques Bailhache", "url": "http://sourceforge.net/u/jacbailhache/", "username": "jacbailhache"}], "external_homepage": "http://slc.sourceforge.net", "icon_url": null, "labels": [], "moved_to_url": "", "name": "slc", "preferred_support_tool": "_url", "preferred_support_url": "http://sourceforge.net/tracker/?func=add&group_id=312501&atid=1315325", "private": false, "screenshots": [], "short_description": "Symbolic Lambda Calculus is a logical formalism based on lambda calculus and combinatory logic, in which there is only one kind of objects, which can represent either terms or equalities. It uses de Bruijn's and lambda calculus notations.", "shortname": "slc", "socialnetworks": [], "status": "active", "summary": "", "tools": [{"label": "Files", "mount_point": "files", "name": "files"}, {"label": "Summary", "mount_point": "summary", "name": "summary", "sourceforge_group_id": 312501}, {"label": "Support", "mount_point": "support", "name": "support"}, {"label": "Reviews", "mount_point": "reviews", "name": "reviews"}, {"label": "Wiki", "mount_point": "wiki", "name": "wiki"}, {"label": "Donate", "mount_point": "donate", "name": "link"}, {"label": "Activity", "mount_point": "activity", "name": "activity"}], "url": "http://sourceforge.net/p/slc/", "video_url": ""}
