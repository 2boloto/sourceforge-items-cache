{"_id": "528a2e36ea406b299dae5dce", "categories": {"audience": [], "database": [], "developmentstatus": [{"fullname": "1 - Planning", "fullpath": "Development Status :: 1 - Planning", "id": 7, "shortname": "planning"}], "environment": [], "language": [{"fullname": "Java", "fullpath": "Programming Language :: Java", "id": 198, "shortname": "java"}], "license": [{"fullname": "GNU General Public License version 2.0 (GPLv2)", "fullpath": "License :: OSI-Approved Open Source :: GNU General Public License version 2.0 (GPLv2)", "id": 15, "shortname": "gpl"}, {"fullname": "GNU General Public License version 3.0 (GPLv3)", "fullpath": "License :: OSI-Approved Open Source :: GNU General Public License version 3.0 (GPLv3)", "id": 679, "shortname": "gplv3"}], "os": [], "topic": [{"fullname": "Investment", "fullpath": "Topic :: Office/Business :: Financial :: Investment", "id": 77, "shortname": "investment"}, {"fullname": "Simulations", "fullpath": "Topic :: Scientific/Engineering :: Simulations", "id": 600, "shortname": "simulations"}, {"fullname": "Artificial Intelligence", "fullpath": "Topic :: Scientific/Engineering :: Artificial Intelligence", "id": 133, "shortname": "ai"}], "translation": []}, "creation_date": "2013-11-18", "developers": [{"name": "BenRayfield", "url": "http://sourceforge.net/u/benrayfield/", "username": "benrayfield"}], "external_homepage": null, "icon_url": null, "labels": [], "moved_to_url": "", "name": "EconBits", "preferred_support_tool": "", "preferred_support_url": "", "private": false, "screenshots": [], "short_description": "Research on this was delayed by other projects that need to be finished first. The idea of econbits is a high dimensional space of things that can be gambled on by AIs really fast similar to buying and selling, but more like a continuous neural net where each bit var, which can be gambled on as 0 or 1, is a dimension. The agents playing this simulation/game should learn to work together like a real economy. One kind of game with deep strategy is... For each econbit, whichever of 0 or 1 gets least simulated money gambled wins, and whoever gambled on that wins nearly all the money gambled on that econbit that cycle. May be slightly less to balance against the strategy of gambling half your money on each (hedging) which would otherwise allow you to win the difference while risking nothing, so instead each gamble will either be lost or win 2 times the amount gambled, which is the same in the limit of when it stabilizes at about half on 0 and half on 1. Encode training data into econbits.", "shortname": "econbits", "socialnetworks": [{"accounturl": "", "socialnetwork": "Twitter"}, {"accounturl": null, "socialnetwork": "Facebook"}], "status": "active", "summary": "Simplified realtime economy like stocks on combinations of bits", "tools": [{"label": "Files", "mount_point": "files", "name": "files"}, {"label": "Summary", "mount_point": "summary", "name": "summary", "sourceforge_group_id": 2010721}, {"label": "Reviews", "mount_point": "reviews", "name": "reviews"}, {"label": "Support", "mount_point": "support", "name": "support"}], "url": "http://sourceforge.net/p/econbits/", "video_url": null}
