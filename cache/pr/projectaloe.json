{"_id": "53f879f90910d43cdf632de2", "categories": {"audience": [], "database": [], "developmentstatus": [], "environment": [], "language": [], "license": [], "os": [], "topic": [], "translation": []}, "creation_date": "2014-08-23", "developers": [{"name": "Radoslaw Kolasinski", "url": "http://sourceforge.net/u/koolas1979/", "username": "koolas1979"}], "external_homepage": "http://projectaloe.sourceforge.net", "icon_url": "http://sourceforge.net/p/projectaloe/icon", "labels": [], "moved_to_url": "", "name": "Project: ALOE", "preferred_support_tool": "", "preferred_support_url": "", "private": false, "screenshots": [], "short_description": "Experiment in which i try of make C++ more \"liquid\". \r\n\r\nThe standard C++98 runtime type information is not very useful. You can use it to do three things in C++: to see the name of the type, to distinguish one type from another, and to dynamically cast from one type to another.\r\n\r\nIn this project I create a layer of abstraction, which provides notion of interfaces, properties, and automated interface queries. \r\n\r\nHypothetical example:\r\n\r\nint frame = videoPlayer[ &IPlaybackControl::CurrentFrame ];\r\n\r\nvideoPlayer[ &IPlaybackControl::Start ]();\r\n\r\nvideoPlayer[ &IWindow::Close ]();", "shortname": "projectaloe", "socialnetworks": [{"accounturl": "", "socialnetwork": "Twitter"}, {"accounturl": null, "socialnetwork": "Facebook"}], "status": "active", "summary": "Abstract experiment", "tools": [{"label": "Activity", "mount_point": "activity", "name": "activity"}, {"label": "Files", "mount_point": "files", "name": "files"}, {"label": "Summary", "mount_point": "summary", "name": "summary", "sourceforge_group_id": 2310573}, {"label": "Reviews", "mount_point": "reviews", "name": "reviews"}, {"label": "Support", "mount_point": "support", "name": "support"}, {"label": "Wiki", "mount_point": "wiki", "name": "wiki"}, {"label": "Code", "mount_point": "code", "name": "hg"}], "url": "http://sourceforge.net/p/projectaloe/", "video_url": null}
