{"_id": "51ca52f20594ca5395599047", "categories": {"audience": [{"fullname": "Advanced End Users", "fullpath": "Intended Audience :: by End-User Class :: Advanced End Users", "id": 536, "shortname": "enduser_advanced"}], "database": [], "developmentstatus": [{"fullname": "1 - Planning", "fullpath": "Development Status :: 1 - Planning", "id": 7, "shortname": "planning"}], "environment": [{"fullname": "Console/Terminal", "fullpath": "User Interface :: Textual :: Console/Terminal", "id": 460, "shortname": "ui_consoleterm"}, {"fullname": "Command-line", "fullpath": "User Interface :: Textual :: Command-line", "id": 459, "shortname": "ui_commandline"}], "language": [{"fullname": "C#", "fullpath": "Programming Language :: C#", "id": 271, "shortname": "csharp"}, {"fullname": "C++", "fullpath": "Programming Language :: C++", "id": 165, "shortname": "cpp"}], "license": [{"fullname": "Creative Commons Attribution License", "fullpath": "License :: Creative Commons Attribution License", "id": 868, "shortname": "ccal"}], "os": [{"fullname": "Windows 7", "fullpath": "Operating System :: Modern (Vendor-Supported) Desktop Operating Systems :: Windows 7", "id": 851, "shortname": "win7"}], "topic": [{"fullname": "Software Development", "fullpath": "Topic :: Software Development", "id": 45, "shortname": "development"}], "translation": [{"fullname": "English", "fullpath": "Translations :: English", "id": 275, "shortname": "english"}]}, "creation_date": "2013-06-26", "developers": [{"name": "FoolyFrunz", "url": "http://sourceforge.net/u/foolyfrunz/", "username": "foolyfrunz"}], "external_homepage": null, "icon_url": "http://sourceforge.net/p/topal/icon", "labels": [""], "moved_to_url": "", "name": "Topal: Organic Parsing Language", "preferred_support_tool": "", "preferred_support_url": "", "private": false, "screenshots": [], "short_description": "Topal: Organic Parsing Language is a functional scripting language with non-strict semantics. It's designed for parsing (as opposed to lexing) with a focus on usability. The language uses procedures rather than functions. Procedures can contain conditional expressions and very basic data storage / bitwise operations. Additionally you can import DLL files and run their functions within the procedures. Procedure names and their argument names are not static; they are defined via a regular expression pattern. For the interpreter to work, it requires two inputs: the desired data for parsing and processing, and an OPL file containing the rules and actions for said input parsing and processing. Thus, procedures make up the entire semantics for a file given for interpretation. Hence, Topal is a parsing language.\r\n\r\nIn short, the system works as such:\r\nInput -> Interpreter + .OPL File -> Interpreted Output\r\n\r\n-Inspired by weev. One can only hope we don't join him in prison for doing arithmetic", "shortname": "topal", "socialnetworks": [{"accounturl": "", "socialnetwork": "Twitter"}], "status": "active", "summary": "Syntactic script interpreter", "tools": [{"label": "Summary", "mount_point": "summary", "name": "summary", "sourceforge_group_id": 1885840}, {"label": "Files", "mount_point": "files", "name": "files"}, {"label": "Reviews", "mount_point": "reviews", "name": "reviews"}, {"label": "Support", "mount_point": "support", "name": "support"}, {"label": "Tickets", "mount_point": "tickets", "name": "tickets"}, {"label": "Discussion", "mount_point": "discussion", "name": "discussion"}, {"label": "Blog", "mount_point": "blog", "name": "blog"}, {"label": "Activity", "mount_point": "activity", "name": "activity"}], "url": "http://sourceforge.net/p/topal/", "video_url": ""}
