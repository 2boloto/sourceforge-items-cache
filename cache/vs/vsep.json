{"_id": "50be51757929e534013a2622", "categories": {"audience": [], "database": [], "developmentstatus": [], "environment": [], "language": [], "license": [], "os": [], "topic": [], "translation": []}, "creation_date": "2012-12-04", "developers": [{"name": "Nathanael Schilling", "url": "http://sourceforge.net/u/natschil/", "username": "natschil"}], "external_homepage": "", "icon_url": null, "labels": [], "moved_to_url": "", "name": "vsep", "preferred_support_tool": "wiki", "preferred_support_url": "", "private": false, "screenshots": [], "short_description": "VSEP is able to parse expressions like:\r\n\r\n (foo + bar + quz) \r\n (foo + bar(1, 2 (foo + bar)))\r\n foo('some_string',bar, 1.001e1)\r\n\r\nIt can then \"solve\" these expression, getting any variables or function return values from various callbacks supplied to it. For the & and | operators (logical and and or, respectively) it supports lazy evaluation. VSEP can also be passed a callback returning the \"difficulty\" of getting a certain variable or function, which it can use to simplify the expression as lazily as possible.\r\n\r\nVSEP is written in C; it strives for efficiency, readable and thoroughly documented code, a high degree of configurabilty and lack of global variables.", "shortname": "vsep", "socialnetworks": [], "status": "active", "summary": "The Very Simple Expression Parser (and Solver) Library for C", "tools": [{"label": "Files", "mount_point": "files", "name": "files"}, {"label": "Code", "mount_point": "code", "name": "git"}, {"label": "Discussion", "mount_point": "discussion", "name": "discussion"}, {"label": "Wiki", "mount_point": "wiki", "name": "wiki"}, {"label": "Tickets", "mount_point": "tickets", "name": "tickets"}, {"label": "Summary", "mount_point": "summary", "name": "summary", "sourceforge_group_id": 1146846}, {"label": "Reviews", "mount_point": "reviews", "name": "reviews"}, {"label": "Support", "mount_point": "support", "name": "support"}], "url": "http://sourceforge.net/p/vsep/", "video_url": ""}
