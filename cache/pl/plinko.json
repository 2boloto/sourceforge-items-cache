{"_id": "514cc54934309d5445086ce5", "categories": {"audience": [{"fullname": "Information Technology", "fullpath": "Intended Audience :: by Industry or Sector :: Information Technology", "id": 363, "shortname": "informationtechnology"}, {"fullname": "Advanced End Users", "fullpath": "Intended Audience :: by End-User Class :: Advanced End Users", "id": 536, "shortname": "enduser_advanced"}, {"fullname": "System Administrators", "fullpath": "Intended Audience :: by End-User Class :: System Administrators", "id": 4, "shortname": "sysadmins"}, {"fullname": "Developers", "fullpath": "Intended Audience :: by End-User Class :: Developers", "id": 3, "shortname": "developers"}], "database": [], "developmentstatus": [{"fullname": "5 - Production/Stable", "fullpath": "Development Status :: 5 - Production/Stable", "id": 11, "shortname": "production"}], "environment": [{"fullname": "Command-line", "fullpath": "User Interface :: Textual :: Command-line", "id": 459, "shortname": "ui_commandline"}, {"fullname": "Plugins", "fullpath": "User Interface :: Plugins", "id": 461, "shortname": "ui_plugins"}], "language": [{"fullname": "Perl", "fullpath": "Programming Language :: Perl", "id": 176, "shortname": "perl"}], "license": [{"fullname": "GNU General Public License version 2.0 (GPLv2)", "fullpath": "License :: OSI-Approved Open Source :: GNU General Public License version 2.0 (GPLv2)", "id": 15, "shortname": "gpl"}], "os": [{"fullname": "OS Independent (Written in an interpreted language)", "fullpath": "Operating System :: Grouping and Descriptive Categories :: OS Independent (Written in an interpreted language)", "id": 235, "shortname": "independent"}, {"fullname": "All POSIX (Linux/BSD/UNIX-like OSes)", "fullpath": "Operating System :: Grouping and Descriptive Categories :: All POSIX (Linux/BSD/UNIX-like OSes)", "id": 200, "shortname": "posix"}], "topic": [{"fullname": "Security", "fullpath": "Topic :: Security", "id": 43, "shortname": "security"}, {"fullname": "Software Development", "fullpath": "Topic :: Software Development", "id": 45, "shortname": "development"}, {"fullname": "Logging", "fullpath": "Topic :: System :: Logging", "id": 148, "shortname": "logging"}, {"fullname": "Information Analysis", "fullpath": "Topic :: Scientific/Engineering :: Information Analysis", "id": 385, "shortname": "informationanalysis"}], "translation": [{"fullname": "English", "fullpath": "Translations :: English", "id": 275, "shortname": "english"}]}, "creation_date": "2006-05-26", "developers": [{"name": "Erik", "url": "http://sourceforge.net/u/bronc94583/", "username": "bronc94583"}], "external_homepage": "http://plinko.sourceforge.net", "icon_url": null, "labels": [], "moved_to_url": "", "name": "Plinko - the smart parser", "preferred_support_tool": "wiki", "preferred_support_url": "", "private": false, "screenshots": [{"caption": "Starting the Plinko engine", "thumbnail_url": "http://sourceforge.net/p/plinko/screenshot/1.png/thumb", "url": "http://sourceforge.net/p/plinko/screenshot/1.png"}, {"caption": "After the Plinko engine has parsed the data", "thumbnail_url": "http://sourceforge.net/p/plinko/screenshot/2.png/thumb", "url": "http://sourceforge.net/p/plinko/screenshot/2.png"}, {"caption": "Starting up the PlinkoNet engine", "thumbnail_url": "http://sourceforge.net/p/plinko/screenshot/3.png/thumb", "url": "http://sourceforge.net/p/plinko/screenshot/3.png"}, {"caption": "After the PlinkoNet engine has parsed the data", "thumbnail_url": "http://sourceforge.net/p/plinko/screenshot/4.png/thumb", "url": "http://sourceforge.net/p/plinko/screenshot/4.png"}], "short_description": "Plinko was originally an experiment with Prefix Trees and log parsing. The general concept is to have a single end point you can send any data to, in a \"fire and forget\" fashion. Plinko should identify and parse the data completely without the sending system caring what it sent. The latest version supports named fields in the STL files for tagging data parsed in the Prefix Tree and anonymous functions for parsing dynamic message payloads. We now output JSON objects and I'm working on HBase integration. By outputting to JSON it also leaves open the possibility for on the fly in memory correlation between events. Read the included README before starting, it has a quick start guide and info on the constructors.", "shortname": "plinko", "socialnetworks": [{"accounturl": "", "socialnetwork": "Twitter"}], "status": "active", "summary": "", "tools": [{"label": "Summary", "mount_point": "summary", "name": "summary", "sourceforge_group_id": 168643}, {"label": "Support", "mount_point": "support", "name": "support"}, {"label": "Reviews", "mount_point": "reviews", "name": "reviews"}, {"label": "Wiki", "mount_point": "wiki", "name": "wiki"}, {"label": "Files", "mount_point": "files", "name": "files"}, {"label": "Code", "mount_point": "code", "name": "cvs"}, {"label": "Activity", "mount_point": "activity", "name": "activity"}], "url": "http://sourceforge.net/p/plinko/", "video_url": ""}
