{"_id": "54084683b9363c798bcd763f", "categories": {"audience": [{"fullname": "Developers", "fullpath": "Intended Audience :: by End-User Class :: Developers", "id": 3, "shortname": "developers"}], "database": [], "developmentstatus": [], "environment": [], "language": [{"fullname": "C++", "fullpath": "Programming Language :: C++", "id": 165, "shortname": "cpp"}, {"fullname": "C", "fullpath": "Programming Language :: C", "id": 164, "shortname": "c"}], "license": [{"fullname": "GNU Library or Lesser General Public License version 3.0 (LGPLv3)", "fullpath": "License :: OSI-Approved Open Source :: GNU Library or Lesser General Public License version 3.0 (LGPLv3)", "id": 680, "shortname": "lgplv3"}], "os": [], "topic": [{"fullname": "Libraries", "fullpath": "Topic :: Software Development :: Libraries", "id": 770, "shortname": "softdevlibraries"}], "translation": [{"fullname": "English", "fullpath": "Translations :: English", "id": 275, "shortname": "english"}]}, "creation_date": "2014-09-04", "developers": [{"name": "Yi\u011fit Y\u00fcce", "url": "http://sourceforge.net/u/yigityuce/", "username": "yigityuce"}], "external_homepage": "http://ysignalslot.sourceforge.net", "icon_url": "http://sourceforge.net/p/ysignalslot/icon", "labels": ["c++", "signalslot", "signal-slot", "YSignalSlot"], "moved_to_url": "", "name": "YSignalSlot", "preferred_support_tool": "", "preferred_support_url": "", "private": false, "screenshots": [], "short_description": "YSignalSlot is a header only C++ library. It is an implementation of signal-slot mechanism via C++. It is similar to C++ signal, Boost::signal and SigSlot. It intensively uses C++11 features.\r\n\r\nAdvantages:\r\n\r\n- Almost everything is compile-time. So it is fast.\r\n- It can be used with single slot function or unlimited slot functions.\r\n- \u201cemit\u201d function\u2019s return type is pointer of your actual slot function\u2019s return type and it can be any type.\r\n- It supports \u201cvoid\u201d return type.\r\n- Slot(s) can be set to enable or disable. If slot(s) is/are disabled, signal can\u2019t emit this/these slot(s).\r\n- If slot which emitted is disabled or its return type is void, \u201cemit\u201d function returns \u201cNULL\u201d pointer.\r\n- It works with member slot functions.\r\n- It uses meta programming methods for \u201cstatic for loop\u201d and \u201cstatic if\u201d.\r\n- Signals can be used nested.\r\n- Receivers can be \u201cthis\u201d pointer.\r\n- It is free and LGPL licensed.\r\n- It uses C++11 features.", "shortname": "ysignalslot", "socialnetworks": [{"accounturl": "", "socialnetwork": "Twitter"}, {"accounturl": null, "socialnetwork": "Facebook"}], "status": "active", "summary": "Header only c++ signal slot mechanism implemantation", "tools": [{"label": "Files", "mount_point": "files", "name": "files"}, {"label": "Activity", "mount_point": "activity", "name": "activity"}, {"label": "Code", "mount_point": "code", "name": "git"}, {"label": "Tickets", "mount_point": "tickets", "name": "tickets"}, {"label": "Support", "mount_point": "support", "name": "support"}, {"label": "Reviews", "mount_point": "reviews", "name": "reviews"}, {"label": "Summary", "mount_point": "summary", "name": "summary", "sourceforge_group_id": 2317637}], "url": "http://sourceforge.net/p/ysignalslot/", "video_url": null}
