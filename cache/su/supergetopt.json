{"status": "active", "external_homepage": "http://supergetopt.sourceforge.net", "developers": [{"url": "http://sourceforge.net/u/toastoid/", "username": "toastoid", "name": "stupendousMan"}], "screenshots": [], "name": "superGetOpt (a getopt replacement)", "preferred_support_tool": "_url", "preferred_support_url": "http://sourceforge.net/project/memberlist.php?group_id=354033", "icon_url": null, "labels": ["getopt replacement"], "video_url": "", "private": false, "creation_date": "2010-09-20", "url": "http://sourceforge.net/p/supergetopt/", "socialnetworks": [{"accounturl": "", "socialnetwork": "Twitter"}], "short_description": "superGetOpt\r\n===========\r\n\r\nSuperGetOpt is a printf-like getopt replacement for command line argument handling.\r\n\r\nThe supergetopt library makes it very easy to handle all kinds of command-line arguments in a printf()-style way. \r\nAll types of command-line arguments are supported and all user-supplied values are checked for type validity.\r\n\r\nIf you have been searching for an easy-to-use, flexible, portable command-line and general use parser, this is it!\r\n\r\nA Simple Example:\r\n=================\r\n\r\n\r\n    int main( int argc, char *argv[] )\r\n    {\r\n        int n, argPos;\r\n        float yourFloat;\r\n        int yourInt;\r\n        char *yourString;\r\n\r\n        n = superGetOpt( argc, argv, &argPos, \"-YourFlag %f%s%d\", &yourFloat, yourString, &yourInt, \"Help Message\", NULL );\r\n\r\n        return(n);\r\n    }\r\n\r\n\r\nIt's that easy. No header files to create, no argument order to concern yourself with.\r\nPlease read the testSuperGetOpt.c example and you'll fully understand.\r\n", "moved_to_url": "", "shortname": "supergetopt", "_id": "5070662271b75b1103d6b061", "tools": [{"sourceforge_group_id": 354033, "mount_point": "summary", "name": "summary", "label": "Summary"}, {"mount_point": "wiki", "name": "wiki", "label": "Wiki"}, {"mount_point": "downloads", "name": "files", "label": "Files"}, {"mount_point": "news", "name": "blog", "label": "News"}, {"mount_point": "code", "name": "svn", "label": "Code"}, {"mount_point": "reviews", "name": "reviews", "label": "Reviews"}, {"mount_point": "support", "name": "support", "label": "Support"}, {"mount_point": "activity", "name": "activity", "label": "Activity"}], "summary": "A simple, elegant way to handle command line arguments in C/C++.", "categories": {"developmentstatus": [{"fullpath": "Development Status :: 6 - Mature", "shortname": "mature", "fullname": "6 - Mature", "id": 12}], "topic": [{"fullpath": "Topic :: Software Development :: Libraries", "shortname": "softdevlibraries", "fullname": "Libraries", "id": 770}], "language": [{"fullpath": "Programming Language :: C", "shortname": "c", "fullname": "C", "id": 164}], "license": [{"fullpath": "License :: OSI-Approved Open Source :: BSD License", "shortname": "bsd", "fullname": "BSD License", "id": 187}], "database": [], "environment": [{"fullpath": "User Interface :: Toolkits/Libraries :: Other toolkit", "shortname": "ui_othertoolkit", "fullname": "Other toolkit", "id": 495}], "audience": [], "translation": [], "os": [{"fullpath": "Operating System :: Grouping and Descriptive Categories :: OS Portable (Source code to work with many OS platforms)", "shortname": "os_portable", "fullname": "OS Portable (Source code to work with many OS platforms)", "id": 436}]}}
