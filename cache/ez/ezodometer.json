{"status": "active", "external_homepage": "", "developers": [{"url": "http://sourceforge.net/u/rsz/", "username": "rsz", "name": "Remik Ziemlinski"}], "screenshots": [{"url": "http://sourceforge.net/p/ezodometer/screenshot/ezOdometer-test.png", "caption": "Console echo of ezOdometer in action using \"make test\".", "thumbnail_url": "http://sourceforge.net/p/ezodometer/screenshot/ezOdometer-test.png/thumb"}], "name": "ezOdometer", "preferred_support_tool": "", "preferred_support_url": "", "icon_url": null, "labels": [], "video_url": "", "private": false, "creation_date": "2012-04-22", "url": "http://sourceforge.net/p/ezodometer/", "socialnetworks": [], "short_description": "Just like an odometer in a car, this C++ class allows positional iteration, but with additional flexibility of using arbitrary values per digit position so you can sequence instead of just incrementing by whole numbers. Each numerical position can be set by a min, max, and stride, each being positive or negative, or by using a list of arbitrary unordered values, so you're not limited to base 10 per position. This allows one to model multi-dimensional array slicing (aka hyper-slabbing) or permutation. It's a single header templated implementation to minimize memory usage and uses STL.", "moved_to_url": "", "shortname": "ezodometer", "_id": "4f9459791be1ce057f000b64", "tools": [{"mount_point": "wiki", "name": "wiki", "label": "Wiki"}, {"mount_point": "downloads", "name": "files", "label": "Files"}, {"mount_point": "code", "name": "git", "label": "Code"}, {"mount_point": "tickets", "name": "tickets", "label": "Tickets"}, {"mount_point": "discussion", "name": "discussion", "label": "Discussion"}, {"mount_point": "activity", "name": "activity", "label": "Activity"}, {"sourceforge_group_id": 754514, "mount_point": "summary", "name": "summary", "label": "Summary"}, {"mount_point": "reviews", "name": "reviews", "label": "Reviews"}, {"mount_point": "support", "name": "support", "label": "Support"}], "summary": "A C++ class for linear and non-linear positional notation iteration.", "categories": {"developmentstatus": [], "topic": [], "language": [], "license": [], "database": [], "environment": [], "audience": [], "translation": [], "os": []}}
