{"_id": "500ade271be1ce066f000089", "categories": {"audience": [{"fullname": "Developers", "fullpath": "Intended Audience :: by End-User Class :: Developers", "id": 3, "shortname": "developers"}], "database": [], "developmentstatus": [{"fullname": "5 - Production/Stable", "fullpath": "Development Status :: 5 - Production/Stable", "id": 11, "shortname": "production"}], "environment": [], "language": [{"fullname": "C++", "fullpath": "Programming Language :: C++", "id": 165, "shortname": "cpp"}], "license": [{"fullname": "zlib/libpng License", "fullpath": "License :: OSI-Approved Open Source :: zlib/libpng License", "id": 195, "shortname": "zlib"}], "os": [], "topic": [{"fullname": "Algorithms", "fullpath": "Topic :: Software Development :: Algorithms", "id": 620, "shortname": "algorithms"}], "translation": [{"fullname": "English", "fullpath": "Translations :: English", "id": 275, "shortname": "english"}, {"fullname": "Russian", "fullpath": "Translations :: Russian", "id": 295, "shortname": "russian"}]}, "creation_date": "2012-07-21", "developers": [{"name": "Andrey Antsut", "url": "http://sourceforge.net/u/kirinyale/", "username": "kirinyale"}], "external_homepage": null, "icon_url": null, "labels": [], "moved_to_url": "", "name": "ImpPath", "preferred_support_tool": "", "preferred_support_url": "", "private": false, "screenshots": [], "short_description": "Very basic path manipulation library. Aims to be simple, intuitive and predictable (not universal).\r\n\r\nWorks with std::string and std::wstring.\r\n\r\nConfigurable to support both POSIX and Windows paths (drive letters only - no schemas, network paths etc), as well as some custom formats (with limitations for simplicity).\r\n\r\nAll configurations understand \"..\" (parent directory) and \".\" (current directory) and handle them during normalization. However, this library never tries to access any real file systems, and thus doesn't know anything about symbolic links.\r\n\r\nPrimarily designed for usage in a secure environment with known simple limitations. For example, for working with internal application resource paths referencing a \"sandboxed\" virtual filesystem (like with PhysicsFS). Platform-specific path support is mainly intended for tools (e.g. map editor) which need to share a common code base (and perhaps some hard-coded resources) with the main sandboxed application (e.g. game).", "shortname": "imppath", "socialnetworks": [{"accounturl": "", "socialnetwork": "Twitter"}], "status": "active", "summary": "Simple C++ library for path manipulation", "tools": [{"label": "Files", "mount_point": "downloads", "name": "files"}, {"label": "Code", "mount_point": "code", "name": "svn"}, {"label": "Summary", "mount_point": "summary", "name": "summary", "sourceforge_group_id": 830722}, {"label": "Reviews", "mount_point": "reviews", "name": "reviews"}, {"label": "Support", "mount_point": "support", "name": "support"}, {"label": "Activity", "mount_point": "activity", "name": "activity"}], "url": "http://sourceforge.net/p/imppath/", "video_url": ""}
