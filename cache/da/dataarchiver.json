{"_id": "4ef1e4070594ca7620000424", "categories": {"audience": [{"fullname": "Information Technology", "fullpath": "Intended Audience :: by Industry or Sector :: Information Technology", "id": 363, "shortname": "informationtechnology"}], "database": [{"fullname": "ADO.NET", "fullpath": "Database Environment :: Database API :: ADO.NET", "id": 835, "shortname": "adonet"}], "developmentstatus": [{"fullname": "4 - Beta", "fullpath": "Development Status :: 4 - Beta", "id": 10, "shortname": "beta"}], "environment": [{"fullname": ".NET/Mono", "fullpath": "User Interface :: Graphical :: .NET/Mono", "id": 469, "shortname": "ui_dotnet"}], "language": [{"fullname": "C#", "fullpath": "Programming Language :: C#", "id": 271, "shortname": "csharp"}], "license": [{"fullname": "GNU General Public License version 3.0 (GPLv3)", "fullpath": "License :: OSI-Approved Open Source :: GNU General Public License version 3.0 (GPLv3)", "id": 679, "shortname": "gplv3"}], "os": [{"fullname": "Vista", "fullpath": "Operating System :: Modern (Vendor-Supported) Desktop Operating Systems :: Vista", "id": 657, "shortname": "vista"}, {"fullname": "Windows 7", "fullpath": "Operating System :: Modern (Vendor-Supported) Desktop Operating Systems :: Windows 7", "id": 851, "shortname": "win7"}], "topic": [{"fullname": "Database", "fullpath": "Topic :: Database", "id": 66, "shortname": "database"}], "translation": []}, "creation_date": "2011-12-21", "developers": [{"name": "mhertzfeld", "url": "http://sourceforge.net/u/mhertzfeld/", "username": "mhertzfeld"}], "external_homepage": "https://github.com/mhertzfeld/DataArchiver", "icon_url": null, "labels": ["Database", "Data Warehouse"], "moved_to_url": "", "name": "Data Archiver", "preferred_support_tool": "_url", "preferred_support_url": "https://github.com/mhertzfeld/DataArchiver/issues", "private": false, "screenshots": [], "short_description": "Application to archive database tables to another database.  \r\n\r\nThe app reads data from the data warehouse table first to build up a cache of what data has already been archived.  It then reads from a production table to find new and updated records and writes them to the data warehouse table.\r\n\r\nYou currently must configure the app through the configuration file.  In the future I might add a GUI for configuration.\r\n\r\nSource code available through the project homepage on GitHub.", "shortname": "dataarchiver", "socialnetworks": [{"accounturl": "", "socialnetwork": "Twitter"}], "status": "active", "summary": "Database Table Data Archiver", "tools": [{"label": "Files", "mount_point": "downloads", "name": "files"}, {"label": "Discussion", "mount_point": "discussion", "name": "discussion"}, {"label": "Summary", "mount_point": "summary", "name": "summary", "sourceforge_group_id": 652342}, {"label": "Reviews", "mount_point": "reviews", "name": "reviews"}, {"label": "Support", "mount_point": "support", "name": "support"}, {"label": "Activity", "mount_point": "activity", "name": "activity"}], "url": "http://sourceforge.net/p/dataarchiver/", "video_url": ""}
