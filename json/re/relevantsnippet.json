{"status": "active", "external_homepage": "http://relevantsnippet.sourceforge.net", "developers": [{"url": "http://sourceforge.net/u/odugurlu/", "username": "odugurlu", "name": "Ozgur D Ugurlu"}], "screenshots": [], "name": "RelevantSnippet", "preferred_support_tool": "", "preferred_support_url": "", "icon_url": null, "labels": [], "video_url": "", "private": false, "creation_date": "2010-10-26", "url": "http://sourceforge.net/p/relevantsnippet/", "socialnetworks": [], "short_description": "Finding the most relevant snippet from a document, based on the search query.\r\n\r\n*** Most Relevant Snippet Selection Algorithm ***\r\n\r\n    This is a scoring based algorithm for finding the most relevant snippet\r\n    of a review, given a search query. \r\n    \r\n    The process starts with producing all permutations of the search query.\r\n    Then these permutations are entered into a dictionary with their respective\r\n    scores. The permutations that are in original order of the search query get\r\n    the higher scores. In short it is;\r\n    \r\n    k = # of words in search query\r\n    \r\n    k*16 points - k words of query found as a phrase in order\r\n    k*8  points - k words of query found as a phrase out of order\r\n    n*4  points - n words of query (1 < n < k) found as phrase in order\r\n    n*2  points - n words of query (1 < n < k) found as phrase out of order\r\n    1 - 1 word of the search query found by itself\r\n\r\n    Please see rel_snippet.py for the rest. ", "moved_to_url": "", "shortname": "relevantsnippet", "_id": "51796de6e88f3d776aaab93f", "tools": [{"sourceforge_group_id": 366328, "mount_point": "summary", "name": "summary", "label": "Summary"}, {"mount_point": "support", "name": "support", "label": "Support"}, {"mount_point": "reviews", "name": "reviews", "label": "Reviews"}, {"mount_point": "files", "name": "files", "label": "Files"}, {"mount_point": "wiki", "name": "wiki", "label": "Wiki"}, {"mount_point": "code", "name": "svn", "label": "Code"}, {"mount_point": "activity", "name": "activity", "label": "Activity"}], "summary": "", "categories": {"developmentstatus": [], "topic": [], "language": [], "license": [], "database": [], "environment": [], "audience": [], "translation": [], "os": []}}
