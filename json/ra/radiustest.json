{"status": "active", "external_homepage": null, "developers": [{"url": "http://sourceforge.net/u/mgarcarz/", "username": "mgarcarz", "name": "Michal Garcarz"}], "screenshots": [], "name": "radiustest", "preferred_support_tool": "", "preferred_support_url": "", "icon_url": null, "labels": [""], "video_url": "", "private": false, "creation_date": "2013-10-25", "url": "http://sourceforge.net/p/radiustest/", "socialnetworks": [{"accounturl": "", "socialnetwork": "Twitter"}], "short_description": "This is a flexible radius client. The main idea is to have a client which could be easily used to test different Radius servers.\r\nClient supports:\r\n- Radius PAP authentication\r\n- Multi thread (sniffing separated from sending)\r\n- Several Attribute Value Pairs (AVP) supported (nas-ip-address, service-type, nas-port-type, calling-station-id, called-station-id)\r\n- We can add new AVP easily\r\n- Support for flooding mode (performance/stress testing)\r\n\r\nClient uses scapy library to send/receive packets. It consists of two python classes:\r\n- RadiusExt: Radius class supporting AVP, authentication, packet manipulation (derived from Scapy Packet class)\r\n- RadiusAttr: Class for AVP (derived from Scapy Packet class)\r\n\r\nI use this client to:\r\n- test basic PAP authentication\r\n- send different AVP to test if Radius server is behaving correctly (RFC compliance)\r\n- display returned AVP\r\n- flood Radius server with multiple packets (performance testing)\r\n\r\nFor examples please refer to readme.txt\r\n", "moved_to_url": "", "shortname": "radiustest", "_id": "526a35ca0594ca3a71392b2a", "tools": [{"mount_point": "files", "name": "files", "label": "Files"}, {"sourceforge_group_id": 1989375, "mount_point": "summary", "name": "summary", "label": "Summary"}, {"mount_point": "reviews", "name": "reviews", "label": "Reviews"}, {"mount_point": "support", "name": "support", "label": "Support"}, {"mount_point": "wiki", "name": "wiki", "label": "Wiki"}, {"mount_point": "tickets", "name": "tickets", "label": "Tickets"}, {"mount_point": "discussion", "name": "discussion", "label": "Discussion"}, {"mount_point": "code-0", "name": "svn", "label": "Code"}, {"mount_point": "activity", "name": "activity", "label": "Activity"}], "summary": "Radius client written in python ", "categories": {"developmentstatus": [{"fullpath": "Development Status :: 4 - Beta", "shortname": "beta", "fullname": "4 - Beta", "id": 10}], "topic": [{"fullpath": "Topic :: System :: Networking", "shortname": "networking", "fullname": "Networking", "id": 150}], "language": [{"fullpath": "Programming Language :: Python", "shortname": "python", "fullname": "Python", "id": 178}], "license": [{"fullpath": "License :: OSI-Approved Open Source :: Open Software License", "shortname": "osl", "fullname": "Open Software License", "id": 388}], "database": [], "environment": [], "audience": [{"fullpath": "Intended Audience :: by End-User Class :: Advanced End Users", "shortname": "enduser_advanced", "fullname": "Advanced End Users", "id": 536}, {"fullpath": "Intended Audience :: by End-User Class :: Quality Engineers", "shortname": "enduser_qa", "fullname": "Quality Engineers", "id": 537}, {"fullpath": "Intended Audience :: by End-User Class :: Architects", "shortname": "architects", "fullname": "Architects", "id": 863}, {"fullpath": "Intended Audience :: by End-User Class :: Auditors", "shortname": "auditors", "fullname": "Auditors", "id": 864}, {"fullpath": "Intended Audience :: by End-User Class :: Security Professionals", "shortname": "secpros", "fullname": "Security Professionals", "id": 866}], "translation": [{"fullpath": "Translations :: English", "shortname": "english", "fullname": "English", "id": 275}], "os": [{"fullpath": "Operating System :: Modern (Vendor-Supported) Desktop Operating Systems :: Linux", "shortname": "linux", "fullname": "Linux", "id": 201}]}}
